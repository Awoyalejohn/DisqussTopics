@model DisqussTopics.Models.ViewModels.TopicViewModel
@{
    ViewData["Title"] = "Detail";
}

@section Banner {
    @if (!string.IsNullOrEmpty(Model.Topic.Banner))
    {
        <div style="height: 10rem">
            <img src="@Model.Topic.Banner" style="width: 100%;height: 100%; object-fit:cover;" />
        </div>
    }
    else
    {
        <div style="height: 10rem">
            <img src="~/images/test-banner.png" style="width: 100%;height: 100%; object-fit:cover;" />
        </div>
    }

    <div class="bg-dark d-flex align-items-center justify-content-center" style="height: 10rem">
        <div class="d-flex">
            @if (!string.IsNullOrEmpty(Model.Topic.Icon))
            {
                <img class="mt-auto mb-auto" src="@Model.Topic.Icon" alt="topic logo" width="75" height="75">

            }
            else
            {
                <img class="mt-auto mb-auto" src="~/images/No_image_available.png" alt="topic logo" width="75" height="75">
            }
            <div class="text-white mt-auto mb-auto text-wrap" style="margin-right: 35rem;width: 40rem;">
                <h1>@Model.Topic.Name</h1>
            </div>
        </div>
    </div>
}



<h4>@Html.DisplayFor(model => model.Topic.Name)</h4>

<hr />

<div class="row">
    <div class="col col-lg-8">
        <div class="card text-center text-bg-dark mb-2">
            <div class="card-header">
                <ul class="nav nav-pills card-header-pills">
                    <li class="nav-item">
                        <!--  Checks if the mostupvoted action method was selected-->
                        @if (ViewContext.RouteData.Values["action"].ToString() == "MostUpvoted" ||
                        ViewContext.RouteData.Values["action"].ToString() == "Detail")
                        {
                            <a class="nav-link active" asp-action="MostUpvoted" asp-route-slug="@Model.Topic.Slug">Most Upvoted</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-action="MostUpvoted" asp-route-slug="@Model.Topic.Slug">Most Upvoted</a>
                        }
                    </li>
                    <li class="nav-item">
                        @if (ViewContext.RouteData.Values["action"].ToString() == "MostDiscussed")
                        {
                            <a class="nav-link active" asp-action="MostDiscussed" asp-route-slug="@Model.Topic.Slug">Most Discussed</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-action="MostDiscussed" asp-route-slug="@Model.Topic.Slug">Most Discussed</a>
                        }
                    </li>
                    <li class="nav-item">
                        @if (ViewContext.RouteData.Values["action"].ToString() == "NewPosts")
                        {
                            <a class="nav-link active" asp-action="NewPosts" asp-route-slug="@Model.Topic.Slug">New Posts</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-action="NewPosts" asp-route-slug="@Model.Topic.Slug">New Posts</a>
                        }
                    </li>
                </ul>
            </div>
        </div>

        @foreach (var item in Model.Posts)
        {
                // Bootstrap Card
            <div class="card text-bg-dark mb-2">
                <div class="card-header">
                    <div class="d-flex justify-content-between">
                        <span>
                            Topic:
                            <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@item.Topic.Slug">
                                @Html.DisplayFor(modelItem => item.Topic.Name)
                            </a>
                            - Posted by
                            <a href="#">
                                @Html.DisplayFor(modelItem => item.DTUser.DTUsername)
                            </a>
                            Time:
                            @Html.DisplayFor(modelItem => item.Created)
                        </span>

                        <div class="dropdown">
                            <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="material-symbols-outlined">
                                    more_vert
                                </span>
                            </span>
                            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                                <li>
                                    <a class="dropdown-item" asp-controller="Post" asp-action="Detail" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">View</a>
                                </li>
                                @if (User.IsInRole("Admin") || item.DTUser.Id == Model.DTUserId)
                                {
                                    <li>
                                        <a class="dropdown-item" asp-controller="Post" asp-action="Edit" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">Edit</a>
                                    </li>
                                    <li>
                                        <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-@item.Id">
                                            Delete
                                        </span>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                </div>
                <div class="card-body">
                    <a asp-controller="Post" asp-action="Detail" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    </a>
                </div>
                <div class="card-body">
                    <img src="~/images/test2.png" class="img-fluid">
                </div>

                <div class="card-body">
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Content)</p>
                </div>
                <div class="card-footer d-flex justify-content-between">
                    <div class="d-flex">

                        <!-- Upvote button-->
                        @if (item.Upvotes != null)
                        {
                            @if (item.Upvotes.Any(u => u.Id == Model.DTUserId))
                            {
                                <form asp-controller="Post" asp-action="RemoveUpvotePost" asp-route-id="@item.Id">
                                    <button type="submit" class="btn btn-success">
                                        <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                                            arrow_circle_up
                                        </span>
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="Post" asp-action="UpvotePost" asp-route-id="@item.Id">
                                    <button type="submit" class="btn btn-success">
                                        <span class="material-symbols-outlined">
                                            arrow_circle_up
                                        </span>
                                    </button>
                                </form>
                            }
                        }
                        <!-- vote count -->
                        <span class="mx-3">@item.Votes</span>

                        @if (item.Downvotes != null)
                        {
                            if (item.Downvotes.Any(d => d.Id == Model.DTUserId))
                            {
                                <form asp-controller="Post" asp-action="RemoveDownvotePost" asp-route-id="@item.Id">
                                    <button type="submit" class="btn btn-danger">
                                        <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                                            arrow_circle_down
                                        </span>
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="Post" asp-action="DownvotePost" asp-action="DownvotePost" asp-route-id="@item.Id">
                                    <button type="submit" class="btn btn-danger">
                                        <span class="material-symbols-outlined">
                                            arrow_circle_down
                                        </span>
                                    </button>
                                </form>
                            }
                        }

                    </div>
                    <!-- comments-->
                    <div>
                        <span class="material-symbols-outlined">
                            chat_bubble
                        </span>
                        @if (item.Comments != null)
                        {
                            @Html.DisplayFor(ModelItem => item.Comments.Count)
                        }
                        else
                        {
                            <span>0</span>
                        }
                    </div>
                    <!-- share-->
                    <button type="button" class="btn btn-primary">Share</button>
                </div>
            </div>

            <!-- Post delete Modal -->
            <div class="modal fade" id="modal-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content text-white bg-dark">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Post</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete "@item.Title"?
                        </div>
                        <div class="modal-footer">
                            <form asp-controller="Post" asp-action="Delete" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-danger">Confirm</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-4 d-none d-lg-block">
        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <span>About Topic</span>
            </div>
            <div class="card-body">
                <p>Topic Name: @Html.DisplayFor(model => model.Topic.Name)</p>
                <p>Topic Description/About: @Html.DisplayFor(model => model.Topic.About)</p>
                <span>Created: @Html.DisplayFor(model => model.Topic.Created)</span>
                <hr />
                <span>Members:</span>
                @if (Model.Topic.DTUsers != null)
                {
                    <span>@Html.DisplayFor(model => model.Topic.DTUsers.Count)</span>
                }
                else
                {
                    <span>0</span>
                }

                <hr />

                @if (User.Identity.IsAuthenticated)
                {
                    @if (Model.Topic.DTUsers != null && Model.Topic.DTUsers.Any(u => u.Id == Model.DTUserId))
                    {
                        <form asp-controller="Topic" asp-action="Unsubscribe" asp-route-slug="@Model.Topic.Slug">
                            @*<input type="hidden" asp-for="Topic.Id"/>*@
                            <button type="submit" class="btn btn-danger">Unsubscribe</button>
                        </form>

                        <a class="btn btn-success" asp-action="Create">Create Post</a>
                    }
                    else
                    {
                        <form asp-controller="Topic" asp-action="Subscribe" asp-route-slug="@Model.Topic.Slug">
                            @*<input type="hidden" asp-for="Topic.Id" />*@
                            <button type="submit" class="btn btn-primary">Subscribe</button>
                        </form>
                    }
                }
                else
                {
                    <p>You need to login to subscribe</p>
                }




            </div>

        </div>

        <!-- Rules Card-->
        @if (Model.Topic.Rules != null)
        {
            <div class="card text-bg-dark mb-2">
                <div class="card-header">
                    <span>Topic Rules</span>
                </div>

                <div class="accordion accordion-flush" id="accordionExample">
                    @{
                        var count = 0;
                    }
                    @foreach (var item in Model.Topic.Rules)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-rule-@item.Id" aria-expanded="false" aria-controls="collapseTwo">
                                    @{
                                        count += 1;
                                    }
                                    @count. @Html.DisplayFor(modelItem => item.Title)
                                </button>
                            </h2>
                            <div id="collapse-rule-@item.Id" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <div class="d-flex">
                                        <strong>@Html.DisplayFor(modelItem => item.Description)</strong>
                                        <!-- Rule options-->
                                        <div class="dropdown">
                                            <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                <span class="material-symbols-outlined">
                                                    more_vert
                                                </span>
                                            </span>
                                            <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                                                @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
                                                {
                                                    <li>
                                                        <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-edit-rule-@item.Id">
                                                            Edit
                                                        </span>
                                                    </li>
                                                    <li>
                                                        <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-delete-rule-@item.Id">
                                                            Delete
                                                        </span>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Rule edit Modal -->
                        @await Html.PartialAsync("~/Views/Rule/_EditRulePartial.cshtml", item)

                        <!-- Rule delete Modal -->
                        <div class="modal fade" id="modal-delete-rule-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content text-white bg-dark">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Rule</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure you want to delete, "@Html.DisplayFor(modelItem => item.Title)"?
                                    </div>
                                    <div class="modal-footer">
                                        <form asp-controller="Rule" asp-action="DeleteRule" asp-route-slug="@Model.Topic.Slug" asp-route-id="@item.Id">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <button type="submit" class="btn btn-danger">Confirm</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
                {
                    <div class="card-footer">
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modal-add-rule">
                            Add Rule
                        </button>
                    </div>

                    <!-- Rule edit Modal -->
                    @await Html.PartialAsync("~/Views/Rule/_CreateRulePartial.cshtml", new Rule() {TopicId = Model.Topic.Id, Topic = Model.Topic})
                }

            </div>
        }

        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <span>Topic Creator</span>
            </div>
            <div class="card-body">
                <p>@Html.DisplayFor(model => model.Topic.DTUser.DTUsername)</p>
            </div>
            @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
            {
                <div class="card-footer">
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal-edit-topic">
                        Edit Topic
                    </button>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#modal-delete-topic">
                        Delete Topic
                    </button>
                </div>

                <!-- Topic edit Modal -->
                @await Html.PartialAsync("_EditTopicPartial", Model)

                <!-- Topic delete Modal -->
                @await Html.PartialAsync("_DeleteTopicPartial", Model.Topic)
            }

        </div>
    </div>
</div>




