@model DisqussTopics.Models.ViewModels.TopicViewModel
@using Humanizer;

@{
    ViewData["Title"] = "Detail";
}

@section Banner {
    @if (!string.IsNullOrEmpty(Model.Topic.Banner))
    {
        <div style="height: 10rem">
            <img src="@Model.Topic.Banner" style="width: 100%;height: 100%; object-fit:cover;" />
        </div>
    }
    else
    {
        <div style="height: 10rem">
            <img src="~/images/test-banner.png" style="width: 100%;height: 100%; object-fit:cover;" />
        </div>
    }

    <div class="bg-dark d-flex flex-column align-items-center justify-content-start mb-2 py-2">
        <div class="container">
            <div class="bg-dark d-flex align-items-center justify-content-start mb-2 py-2">
                <div class="d-flex ">
                    @if (!string.IsNullOrEmpty(Model.Topic.Icon))
                    {
                        <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Topic.Slug">
                            <img class="mt-auto mb-auto" src="@Model.Topic.Icon" alt="topic logo" height="75" style="align-self: start;">
                        </a>
                    }
                    else
                    {
                        <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Topic.Slug">
                            <img class="mt-auto mb-auto" src="~/images/No_image_available.png" alt="topic logo" height="75" style="align-self: start;">
                        </a>
                    }
                    <div class="text-white mt-auto mb-auto text-wrap" style="max-width: 40rem;">
                        <a class="post-card-link" asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Topic.Slug">
                            <span class="h1">@Html.DisplayFor(model => model.Topic.Name)</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="container d-lg-none">
            <div class="d-flex gap-2">
                @if (Model.Topic.DTUsers != null && Model.Topic.DTUsers.Any(u => u.Id == Model.DTUserId))
                {
                    <form asp-controller="Topic" asp-action="Unsubscribe" asp-route-slug="@Model.Topic.Slug">
                        <button type="submit" class="btn btn-outline-light">Unsubscribe</button>
                    </form>

                    <a class="btn btn-outline-light" asp-action="Create">Create Post</a>
                }
                else
                {
                    <form asp-controller="Topic" asp-action="Subscribe" asp-route-slug="@Model.Topic.Slug">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="submit" class="btn btn-outline-light">Subscribe</button>

                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-light" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Login to Subscribe!">
                                Subscribe
                            </button>
                        }
                    </form>
                }
            </div>

        </div>

    </div>

}

<div class="row">
    <div class="col col-lg-8">
        <div class="card text-center text-bg-dark mb-2">
            <div class="card-header">
                <ul class="nav nav-pills card-header-pills">
                    <li class="nav-item">
                        <!--  Checks if the mostupvoted action method was selected-->
                        @if (ViewContext.RouteData.Values["action"].ToString() == "MostUpvoted" ||
                        ViewContext.RouteData.Values["action"].ToString() == "Detail")
                        {
                            <a class="nav-link active" asp-action="MostUpvoted" asp-route-slug="@Model.Topic.Slug">Most Upvoted</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-action="MostUpvoted" asp-route-slug="@Model.Topic.Slug">Most Upvoted</a>
                        }
                    </li>
                    <li class="nav-item">
                        @if (ViewContext.RouteData.Values["action"].ToString() == "MostDiscussed")
                        {
                            <a class="nav-link active" asp-action="MostDiscussed" asp-route-slug="@Model.Topic.Slug">Most Discussed</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-action="MostDiscussed" asp-route-slug="@Model.Topic.Slug">Most Discussed</a>
                        }
                    </li>
                    <li class="nav-item">
                        @if (ViewContext.RouteData.Values["action"].ToString() == "NewPosts")
                        {
                            <a class="nav-link active" asp-action="NewPosts" asp-route-slug="@Model.Topic.Slug">New Posts</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-action="NewPosts" asp-route-slug="@Model.Topic.Slug">New Posts</a>
                        }
                    </li>
                </ul>
            </div>
        </div>

        @if (Model.Posts != null && Model.Posts.Count() > 0)
        {
            @foreach (var item in Model.Posts)
            {
                // Bootstrap Card
                <div class="card text-bg-dark mb-2">
                    <div class="card-header">
                        <div class="d-flex justify-content-between">
                            <span>
                                Posted by
                                <a href="#" class="post-card-link" style="position: relative; z-index: 2;">
                                    @Html.DisplayFor(modelItem => item.DTUser.DTUsername)
                                </a>

                                <span>@item.Created.Humanize()</span>
                            </span>

                            <div class="dropdown options-hover">
                                <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false" style="position: relative; z-index: 2;">
                                    <span class="material-symbols-outlined">
                                        more_vert
                                    </span>
                                </span>
                                <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Post" asp-action="Detail" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">View</a>
                                    </li>
                                    @if (User.IsInRole("Admin") || item.DTUser.Id == Model.DTUserId)
                                    {
                                        <li>
                                            <a class="dropdown-item" asp-controller="Post" asp-action="Edit" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">Edit</a>
                                        </li>
                                        <li>
                                            <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-@item.Id">
                                                Delete
                                            </span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>

                    </div>

                    <div class="card-body">
                        <a asp-controller="Post" asp-action="Detail" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id"
                           class="h5 stretched-link text-white" style="text-decoration: none">
                            @Html.DisplayFor(modelItem => item.Title)
                        </a>
                    </div>

                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(item.Content))
                        {
                            <span>@Html.Raw(item.Content)</span>
                        }
                        else if (!string.IsNullOrEmpty(item.Image))
                        {
                            <div class="d-flex align-items-center justify-content-center">
                                <img src="@item.Image" class="img-fluid">
                            </div>
                        }
                        else if (!string.IsNullOrEmpty(item.Video))
                        {
                            <div class="ratio ratio-16x9">
                                <video src="@item.Video" height="300" width="300" allowfullscreen controls></video>
                            </div>
                        }
                    </div>

                    <div class="card-footer d-flex justify-content-between">
                        <div class="d-flex">

                            <!-- Upvote button-->
                            @if (item.Upvotes != null)
                            {
                                @if (item.Upvotes.Any(u => u.Id == Model.DTUserId))
                                {
                                    <form asp-controller="Post" asp-action="RemoveUpvotePost" asp-route-id="@item.Id" style="position: relative; z-index: 2;">
                                        <button type="submit" class="text-white" style="border:none; background:none;">
                                            <span class="material-symbols-outlined h3 vote-button" style="font-variation-settings: 'FILL' 1;">
                                                arrow_circle_up
                                            </span>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-controller="Post" asp-action="UpvotePost" asp-route-id="@item.Id" style="position: relative; z-index: 2;">
                                        <button type="submit" class="text-white" style="border:none; background:none;">
                                            <span class="material-symbols-outlined h3 vote-button">
                                                arrow_circle_up
                                            </span>
                                        </button>
                                    </form>
                                }
                            }
                            <!-- vote count -->
                            <span class="mx-3">@item.Votes</span>

                            @if (item.Downvotes != null)
                            {
                                if (item.Downvotes.Any(d => d.Id == Model.DTUserId))
                                {
                                    <form asp-controller="Post" asp-action="RemoveDownvotePost" asp-route-id="@item.Id" style="position: relative; z-index: 2;">
                                        <button type="submit" class="text-white" style="border:none; background:none;">
                                            <span class="material-symbols-outlined h3 vote-button" style="font-variation-settings: 'FILL' 1;">
                                                arrow_circle_down
                                            </span>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-controller="Post" asp-action="DownvotePost" asp-action="DownvotePost" asp-route-id="@item.Id" style="position: relative; z-index: 2;">
                                        <button type="submit" class="text-white" style="border:none; background:none;">
                                            <span class="material-symbols-outlined h3 vote-button">
                                                arrow_circle_down
                                            </span>
                                        </button>
                                    </form>
                                }
                            }

                        </div>
                        <!-- comments-->
                        <div class="d-flex gap-1">
                            <span class="material-symbols-outlined">
                                chat_bubble
                            </span>
                            @if (item.Comments != null)
                            {
                                <span>@Html.DisplayFor(ModelItem => item.Comments.Count)</span>
                            }
                            else
                            {
                                <span>0</span>
                            }
                        </div>
                        <!-- share-->
                        <button type="button" class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#modal-share-post-@item.Id" style="position: relative; z-index: 2;">Share</button>
                    </div>
                </div>

                <!-- Post share Modal -->
                <div class="modal fade post-share-modal" id="modal-share-post-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" data-post-share-modal-id="@item.Id">
                    @await Html.PartialAsync("~/Views/Post/_SharePostPartial.cshtml", new PostViewModel() { Post = item })
                </div>


                <!-- Post delete Modal -->
                <div class="modal fade" id="modal-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content text-white bg-dark">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Post</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete "@item.Title"?
                            </div>
                            <div class="modal-footer">
                                <form asp-controller="Post" asp-action="Delete" asp-route-topic="@item.Topic.Name" asp-route-slug="@item.Slug" asp-route-id="@item.Id">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger">Confirm</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="card text-center text-bg-dark">
                <div class="card-body">
                    <h1>No Posts found in this topic</h1>
                    <h2>Try creating some posts for this topic</h2>
                    <a asp-controller="Post" asp-action="Create" class="btn btn-outline-light">Create Post</a>
                </div>
            </div>
        }


    </div>

    <div class="col-4 d-none d-lg-block">
        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <span>About Topic</span>
            </div>

            <div class="card-body">
                <div class="d-flex gap-2">
                    <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Topic.Slug">
                        @if (!string.IsNullOrEmpty(Model.Topic.Icon))
                        {
                            <img class="mb-auto mt-auto" src="@Model.Topic.Icon" alt="topic logo" width="40" height="40">
                        }
                        else
                        {
                            <img class="mb-auto mt-auto" src="~/images/No_image_available.png" alt="topic logo" width="40" height="40">
                        }
                    </a>

                    <a class="post-card-link" asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Topic.Slug">
                        <span class="fw-bold fs-3">@Html.DisplayFor(model => model.Topic.Name)</span>
                    </a>
                </div>

                <p> <small>@Html.DisplayFor(model => model.Topic.About)</small></p>

                <span class="d-flex gap-2">
                    <span class="material-symbols-outlined">
                        calendar_month
                    </span>
                    <span>
                        Created @Model.Topic.Created.Humanize()
                    </span>
                </span>
                <hr />
                <span>Members:</span>
                @if (Model.Topic.DTUsers != null)
                {
                    <span>@Html.DisplayFor(model => model.Topic.DTUsers.Count)</span>
                }
                else
                {
                    <span>0</span>
                }

                <hr />


                <div class="d-flex gap-2">
                    @if (Model.Topic.DTUsers != null && Model.Topic.DTUsers.Any(u => u.Id == Model.DTUserId))
                    {
                        <form asp-controller="Topic" asp-action="Unsubscribe" asp-route-slug="@Model.Topic.Slug">
                            <button type="submit" class="btn btn-outline-light">Unsubscribe</button>
                        </form>

                        <a class="btn btn-outline-light" asp-action="Create">Create Post</a>
                    }
                    else
                    {
                        <form asp-controller="Topic" asp-action="Subscribe" asp-route-slug="@Model.Topic.Slug">

                            @if (User.Identity.IsAuthenticated)
                            {
                                <button type="submit" class="btn btn-outline-light">Subscribe</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-outline-light" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Login to Subscribe!">
                                    Subscribe
                                </button>
                            }
                        </form>
                    }
                </div>





            </div>

        </div>

        <!-- Rules Card-->
        @if (Model.Topic.Rules != null)
        {
            <div class="card text-bg-dark mb-2">
                <div class="card-header">
                    <span>Topic Rules</span>
                </div>

                <div class="accordion accordion-flush" id="accordionExample">
                    @{
                        var count = 0;
                    }
                    @foreach (var item in Model.Topic.Rules)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-rule-@item.Id" aria-expanded="false" aria-controls="collapseTwo">
                                    @{
                                        count += 1;
                                    }
                                    @count. @Html.DisplayFor(modelItem => item.Title)
                                </button>
                            </h2>
                            <div id="collapse-rule-@item.Id" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <div class="d-flex">
                                        <strong>@Html.DisplayFor(modelItem => item.Description)</strong>
                                        <!-- Rule options-->
                                        @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
                                        {
                                            <div class="dropdown">
                                                <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <span class="material-symbols-outlined">
                                                        more_vert
                                                    </span>
                                                </span>
                                                <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                                                    @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
                                                    {
                                                        <li>
                                                            <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-edit-rule-@item.Id">
                                                                Edit
                                                            </span>
                                                        </li>
                                                        <li>
                                                            <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-delete-rule-@item.Id">
                                                                Delete
                                                            </span>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Rule edit Modal -->
                        @await Html.PartialAsync("~/Views/Rule/_EditRulePartial.cshtml", item)

                        <!-- Rule delete Modal -->
                        <div class="modal fade" id="modal-delete-rule-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content text-white bg-dark">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Rule</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure you want to delete, "@Html.DisplayFor(modelItem => item.Title)"?
                                    </div>
                                    <div class="modal-footer">
                                        <form asp-controller="Rule" asp-action="DeleteRule" asp-route-slug="@Model.Topic.Slug" asp-route-id="@item.Id">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <button type="submit" class="btn btn-danger">Confirm</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
                {
                    <div class="card-footer">
                        <button type="button" class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#modal-add-rule">
                            Add Rule +
                        </button>
                    </div>

                    <!-- Rule edit Modal -->
                    @await Html.PartialAsync("~/Views/Rule/_CreateRulePartial.cshtml", new Rule() {TopicId = Model.Topic.Id, Topic = Model.Topic})
                }

            </div>
        }

        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <span>Topic Creator</span>
            </div>
            <div class="card-body">
                <p>@Html.DisplayFor(model => model.Topic.DTUser.DTUsername)</p>
            </div>
            @if (User.IsInRole("Admin") || Model.DTUserId == Model.Topic.DTUserId)
            {
                <div class="card-footer">
                    <button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#modal-edit-topic">
                        Edit Topic
                    </button>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#modal-delete-topic">
                        Delete Topic
                    </button>
                </div>

                <!-- Topic edit Modal -->
                @await Html.PartialAsync("_EditTopicPartial", Model)

                <!-- Topic delete Modal -->
                @await Html.PartialAsync("_DeleteTopicPartial", Model.Topic)
            }

        </div>
    </div>
</div>




