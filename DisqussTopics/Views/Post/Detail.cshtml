@model DisqussTopics.Models.ViewModels.PostDetailViewModel
@using Humanizer;

@{
    ViewData["Title"] = "Detail";
}

@section Banner {
    @if (!string.IsNullOrEmpty(Model.Post.Topic.Banner))
    {
        <div style="height: 10rem">
            <img src="@Model.Post.Topic.Banner" style="width: 100%;height: 100%; object-fit:cover;" />
        </div>
    }
    else
    {
        <div style="height: 10rem">
            <img src="~/images/test-banner.png" style="width: 100%;height: 100%; object-fit:cover;" />
        </div>
    }

    <div class="bg-dark d-flex align-items-center justify-content-start mb-2 py-2">
        <div class="container">
            <div class="bg-dark d-flex align-items-center justify-content-start mb-2 py-2">
                <div class="d-flex ">
                    @if (!string.IsNullOrEmpty(Model.Post.Topic.Icon))
                    {
                        <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Post.Topic.Slug">
                            <img class="mt-auto mb-auto align-self-center" src="@Model.Post.Topic.Icon" alt="topic logo" height="75">
                        </a>
                    }
                    else
                    {
                        <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Post.Topic.Slug">
                            <img class="mt-auto mb-auto" src="~/images/No_image_available.png" alt="topic logo" height="75" style="width: 100%;">
                        </a>
                    }
                    <div class="text-white mt-auto mb-auto text-wrap" style="max-width: 40rem;">
                        <a class="post-card-link" asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Post.Topic.Slug">
                            <span class="h1">@Html.DisplayFor(model => model.Post.Topic.Name)</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

    </div>

}

<div class="row">
    <div class="col col-lg-9">
        <!-- Bootstrap Card for post area-->
        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <div class="d-flex justify-content-between">
                    <span>
                        Posted by
                        <a href="#" class="post-card-link">
                            @Html.DisplayFor(model => model.Post.DTUser.DTUsername)
                        </a>
                        @Model.Post.Created.Humanize()
                    </span>

                    @if (User.IsInRole("Admin") || Model.Post.DTUserId == Model.UserId)
                    {
                        <div class="dropdown options-hover">
                            <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="material-symbols-outlined">
                                    more_vert
                                </span>
                            </span>
                            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                                <li>
                                    <a class="dropdown-item" asp-controller="Post" asp-action="Edit" asp-route-topic="@Model.Post.Topic.Name" asp-route-slug="@Model.Post.Slug" asp-route-id="@Model.Post.Id">Edit</a>
                                </li>
                                <li>
                                    <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#post-modal">
                                        Delete
                                    </span>
                                </li>

                            </ul>
                        </div>
                    }

                </div>

            </div>

            <div class="card-body">
                <h5 class="card-title">@Html.DisplayFor(model => model.Post.Title)</h5>
            </div>

            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Post.Content))
                {
                    @Html.Raw(Model.Post.Content)
                }
                else if (!string.IsNullOrEmpty(Model.Post.Image))
                {
                    <div class="d-flex align-items-center justify-content-center">
                        <img src="@Model.Post.Image" class="img-fluid">
                    </div>
                }
                else if (!string.IsNullOrEmpty(Model.Post.Video))
                {
                    <div class="ratio ratio-16x9">
                        <video src="@Model.Post.Video" height="300" width="300" allowfullscreen controls></video>
                    </div>
                }
            </div>



            <div class="card-footer d-flex justify-content-between">
                <div class="d-flex">

                    <!-- Upvote button-->
                    @if (Model.Post.Upvotes != null)
                    {
                        @if (Model.Post.Upvotes.Any(u => u.Id == Model.UserId))
                        {
                            <form asp-controller="Post" asp-action="RemoveUpvotePost" asp-route-id="@Model.Post.Id">
                                <button type="submit" class="text-white" style="border:none; background:none;">
                                    <span class="material-symbols-outlined h3 vote-button" style="font-variation-settings: 'FILL' 1;">
                                        arrow_circle_up
                                    </span>
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-controller="Post" asp-action="UpvotePost" asp-route-id="@Model.Post.Id">
                                <button type="submit" class="text-white" style="border:none; background:none;">
                                    <span class="material-symbols-outlined h3 vote-button">
                                        arrow_circle_up
                                    </span>
                                </button>
                            </form>
                        }
                    }
                    <!-- vote count -->
                    <span class="mx-3">@Model.Post.Votes</span>

                    @if (Model.Post.Downvotes != null)
                    {
                        if (Model.Post.Downvotes.Any(d => d.Id == Model.UserId))
                        {
                            <form asp-controller="Post" asp-action="RemoveDownvotePost" asp-route-id="@Model.Post.Id">
                                <button type="submit" class="text-white" style="border:none; background:none;">
                                    <span class="material-symbols-outlined h3 vote-button" style="font-variation-settings: 'FILL' 1;">
                                        arrow_circle_down
                                    </span>
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-controller="Post" asp-action="DownvotePost" asp-action="DownvotePost" asp-route-id="@Model.Post.Id">
                                <button type="submit" class="text-white" style="border:none; background:none;">
                                    <span class="material-symbols-outlined h3 vote-button">
                                        arrow_circle_down
                                    </span>
                                </button>
                            </form>
                        }
                    }

                </div>
                <!-- comments-->
                <div class="d-flex gap-1">
                    <span class="material-symbols-outlined">
                        chat_bubble
                    </span>
                    @if (Model.Post.Comments != null)
                    {
                        <span>@Html.DisplayFor(ModelItem => Model.Post.Comments.Count)</span>
                    }
                    else
                    {
                        <span>0</span>
                    }
                </div>
                <!-- share-->
                <button type="button" class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#modal-share-post-@Model.Post.Id">Share</button>
            </div>
        </div>

        <!-- Post share Modal -->
        <div class="modal fade post-share-modal" id="modal-share-post-@Model.Post.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" data-post-share-modal-id="@Model.Post.Id">
            @await Html.PartialAsync("~/Views/Post/_SharePostPartial.cshtml", new PostViewModel() { Post = Model.Post })
        </div>

        <!-- Bootstrap Card for comment area-->
        <div class="card text-bg-dark mb-2">
            <div class="card-body">
                <h4>Comment</h4>

                <form asp-controller="Post" asp-action="Detail">
                    <input type="hidden" asp-for="Post.Id" />
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <input type="hidden" asp-for="Comment.PostId" />
                        <textarea asp-for="Comment.Content" rows="4" class="form-control" placeholder="What are your thoughts?"></textarea>
                        <span asp-validation-for="Comment.Content" class="text-danger"></span>
                    </div>
                    <div class="text-end mt-2">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="submit" class="btn btn-light">Comment</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Login to Comment!">
                                Comment
                            </button>
                        }
                    </div>
                </form>


            </div>

            @foreach (var item in Model.Comments)
            {
                <div class="card-footer">
                    <div>
                        <span>
                            <a href="#" class="post-card-link">
                                <img src="~/images/No_image_available.png" width="30" height="30">
                                <small>@Html.DisplayFor(modelItem => item.DTUser.DTUsername)</small>
                            </a>
                        </span>
                        <span>-</span>
                        <span>
                            <small>@item.Created.Humanize()</small>
                        </span>
                    </div>

                    <div class="ps-4">@Html.DisplayFor(modelItem => item.Content)</div>

                    <div class="ps-4 d-flex gap-2">

                        @if (User.Identity.IsAuthenticated)
                        {

                            @if (item.Upvotes != null && item.Upvotes.Any(c => c.Id == Model.UserId))
                            {
                                <form asp-controller="Comment" asp-action="RemoveUpvoteComment" asp-route-id="@item.Id">
                                    <button type="submit" class="text-white" style="border:none; background:none;">
                                        <span class="material-symbols-outlined vote-button" style="font-variation-settings: 'FILL' 1;">
                                            arrow_circle_up
                                        </span>
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="Comment" asp-action="UpvoteComment" asp-route-id="@item.Id">
                                    <button type="submit" class="text-white" style="border:none; background:none;">
                                        <span class="material-symbols-outlined vote-button">
                                            arrow_circle_up
                                        </span>
                                    </button>
                                </form>
                            }

                            <span>@Html.DisplayFor(modelItem => item.Votes)</span>

                            @if (item.Downvotes != null && item.Downvotes.Any(c => c.Id == Model.UserId))
                            {
                                <form asp-controller="Comment" asp-action="RemoveDownvoteComment" asp-route-id="@item.Id">
                                    <button type="submit" class="text-white" style="border:none; background:none;">
                                        <span class="material-symbols-outlined vote-button" style="font-variation-settings: 'FILL' 1;">
                                            arrow_circle_down
                                        </span>
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="Comment" asp-action="DownvoteComment" asp-route-id="@item.Id">
                                    <button type="submit" class="text-white vote-button" style="border:none; background:none;">
                                        <span class="material-symbols-outlined">
                                            arrow_circle_down
                                        </span>
                                    </button>
                                </form>
                            }
                        }
                        else
                        {
                            <button type="button" class="text-white" style="border:none; background:none;"
                            data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Login to Upvote!">
                                <span class="material-symbols-outlined">
                                    arrow_circle_up
                                </span>
                            </button>

                            <span>@Html.DisplayFor(modelItem => item.Votes)</span>

                            <button type="button" class="text-white" style="border:none; background:none;"
                                    data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Login to Downvote!">
                                <span class="material-symbols-outlined">
                                    arrow_circle_down
                                </span>
                            </button>
                        }

                        @if (User.IsInRole("Admin") || item.DTUserId == Model.UserId)
                        {
                            <div class="dropdown options-hover">
                                <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="material-symbols-outlined">
                                        more_vert
                                    </span>
                                </span>
                                <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                                    <li>
                                        <span role="button" class="dropdown-item comment-edit" data-comment-id="@item.Id" data-bs-toggle="modal" data-bs-target="#comment-edit-modal-@item.Id">
                                            Edit
                                        </span>
                                    </li>
                                    <li>
                                        <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#comment-delete-modal-@item.Id" data-url="@Url.Action($"Edit/Comment/{item.Id}")">
                                            Delete
                                        </span>
                                    </li>
                                </ul>
                            </div>
                        }

                    </div>
                </div>

                <!-- Comment Delete Modal -->
                <div class="modal fade" id="comment-delete-modal-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content text-white bg-dark">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Comment</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete this comment?
                            </div>
                            <div class="modal-footer">
                                <form asp-controller="Comment" asp-action="Delete" asp-route-id="@item.Id">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger">Confirm</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Comment Edit modal partial-->
                <div class="modal fade comment-edit-modal" id="comment-edit-modal-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" data-comment-edit-modal-id="@item.Id">
                    @await Html.PartialAsync("~/Views/Comment/_EditCommentPartial.cshtml", item)
                </div>



            }

        </div>
    </div>

    <div class="col-3 d-none d-lg-block">
        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <span>About Topic</span>
            </div>
            <div class="card-body">
                <div class="d-flex gap-2">
                    <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Post.Topic.Slug">
                        @if (!string.IsNullOrEmpty(Model.Post.Topic.Icon))
                        {
                            <img class="mb-auto mt-auto" src="@Model.Post.Topic.Icon" alt="topic logo" width="40" height="40">
                        }
                        else
                        {
                            <img class="mb-auto mt-auto" src="~/images/No_image_available.png" alt="topic logo" width="40" height="40">
                        }
                    </a>

                    <a class="post-card-link" asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Post.Topic.Slug">
                        <span class="fw-bold fs-3">@Html.DisplayFor(model => model.Post.Topic.Name)</span>
                    </a>
                </div>

                <p> <small>@Html.DisplayFor(model => model.Post.Topic.About)</small></p>

                <span class="d-flex gap-2">
                    <span class="material-symbols-outlined">
                        calendar_month
                    </span>
                    <span>
                        Created @Model.Post.Topic.Created.Humanize()
                    </span>
                </span>
                <hr />
                <span>Members:</span>
                @if (Model.Post.Topic.DTUsers != null)
                {
                    <span>@Html.DisplayFor(model => model.Post.Topic.DTUsers.Count)</span>
                }
                else
                {
                    <span>0</span>
                }

                <hr />

                @if (User.Identity.IsAuthenticated)
                {
                    <div class="d-flex gap-2">
                        @if (Model.Post.Topic.DTUsers != null && Model.Post.Topic.DTUsers.Any(u => u.Id == Model.UserId))
                        {
                            <form asp-controller="Topic" asp-action="Unsubscribe" asp-route-slug="@Model.Post.Topic.Slug">
                                @*<input type="hidden" asp-for="Topic.Id"/>*@
                                <button type="submit" class="btn btn-outline-light">Unsubscribe</button>
                            </form>

                            <a class="btn btn-outline-light" asp-action="Create">Create Post</a>
                        }
                        else
                        {
                            <form asp-controller="Topic" asp-action="Subscribe" asp-route-slug="@Model.Post.Topic.Slug">
                                @*<input type="hidden" asp-for="Topic.Id" />*@
                                <button type="submit" class="btn btn-outline-light">Subscribe</button>
                            </form>
                        }
                    </div>
                }
                else
                {
                    <p>You need to login to subscribe</p>
                }




            </div>

        </div>

        @if (Model.Post.Topic.Rules != null)
        {
            <div class="card text-bg-dark mb-2">
                <div class="card-header">
                    <span>Topic Rules</span>
                </div>

                <div class="accordion accordion-flush" id="accordionExample">
                    @{
                        var count = 0;
                    }
                    @foreach (var item in Model.Post.Topic.Rules)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-rule-@item.Id" aria-expanded="false" aria-controls="collapseTwo">
                                    @{
                                        count += 1;
                                    }
                                    @count. @Html.DisplayFor(modelItem => item.Title)
                                </button>
                            </h2>
                            <div id="collapse-rule-@item.Id" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <strong>@Html.DisplayFor(modelItem => item.Description)</strong>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }



        <div class="card text-bg-dark mb-2">
            <div class="card-header">
                <span>Topic Creator</span>
            </div>
            <div class="card-body">
                <p class="fw-bold">@Html.DisplayFor(model => model.Post.Topic.DTUser.DTUsername)</p>
            </div>
        </div>
    </div>
</div>


<!-- Post delete Modal -->
<div class="modal fade" id="post-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content text-white bg-dark">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Post</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete, "@Model.Post.Title"?
            </div>
            <div class="modal-footer">
                <form asp-controller="Post" asp-action="Delete" asp-route-topic="@Model.Post.Topic.Name" asp-route-slug="@Model.Post.Slug" asp-route-id="@Model.Post.Id">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>


