@model DisqussTopics.Models.ViewModels.PostDetailViewModel

@{
    ViewData["Title"] = "Detail";
}

<h1>Detail</h1>

<h4>Post</h4>

<hr />

<div>

    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Slug)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Slug)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Image)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Image)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Video)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Video)
        </dd>
    </dl>
</div>


@if (User.Identity.IsAuthenticated)
{
    @if (Model.PostUpvoted)
    {
        <form asp-controller="Post" asp-action="RemoveUpvotePost" asp-route-id="@Model.Post.Id">
            <button type="submit" class="btn btn-success">
                <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                    arrow_circle_up
                </span>
            </button>
        </form>
    }
    else
    {
        <form asp-controller="Post" asp-action="UpvotePost" asp-route-id="@Model.Post.Id">
            <button type="submit" class="btn btn-success">
                <span class="material-symbols-outlined">
                    arrow_circle_up
                </span>
            </button>
        </form>
    }

    <br />

    @if (Model.PostDownvoted)
    {
        <form asp-controller="Post" asp-action="RemoveDownvotePost" asp-route-id="@Model.Post.Id">
            <button type="submit" class="btn btn-danger">
                <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                    arrow_circle_down
                </span>
            </button>
        </form>
    }
    else
    {
        <form asp-controller="Post" asp-action="DownvotePost" asp-action="DownvotePost" asp-route-id="@Model.Post.Id">
            <button type="submit" class="btn btn-danger">
                <span class="material-symbols-outlined">
                    arrow_circle_down
                </span>
            </button>
        </form>
    }
}
else
{
    <p>You need to login to upvote or downvote posts</p>
}


@if (Model.Post.Upvotes != null)
{
    <p>Upvotes count: @Model.Post.Upvotes.Count</p>
}
else
{
    <p>Upvotes count: 0</p>
}

@if (Model.Post.Downvotes != null)
{
    <p>Downvotes count: @Model.Post.Downvotes.Count</p>
}
else
{
    <p>Downvotes count: 0</p>
}

<p>Votes count: @Model.Post.Votes</p>

<h4>Comment</h4>

<hr />

@if (User.Identity.IsAuthenticated)
{
    <form asp-controller="Post" asp-action="Detail">
        <input type="hidden" asp-for="Post.Id" />
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
            <input type="hidden" asp-for="Comment.PostId" />
            <label asp-for="Comment.Content" class="control-label"></label>
            <input asp-for="Comment.Content" class="form-control" />
            <span asp-validation-for="Comment.Content" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
}
else
{
    <p>You need to login to comment on a post!</p>
}


<div>
    <!-- Edit link goes here  -->
    <!-- Delete link goes here  -->
    <a asp-action="Index">Back to List</a>
</div>

<h4>Comments</h4>

@foreach (var item in Model.Comments)
{


    <h4>@item.Content</h4>
    <a asp-controller="Comment" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-dark">Edit Comment</a>
    <a asp-controller="Comment" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete Comment</a>
    <p>@item.Created</p>
    <p>@item.Updated</p>

    if (User.Identity.IsAuthenticated)
    {

        @if (item.Upvotes.Any(c => c.Id == Model.UserId))
        {
            <form asp-controller="Comment" asp-action="RemoveUpvoteComment" asp-route-id="@item.Id">
                <button type="submit" class="btn btn-info">
                    <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                        arrow_circle_up
                    </span>
                </button>
            </form>
        }
        else
        {
            <form asp-controller="Comment" asp-action="UpvoteComment" asp-route-id="@item.Id">
                <button type="submit" class="btn btn-info">
                    <span class="material-symbols-outlined">
                        arrow_circle_up
                    </span>
                </button>
            </form>
        }

        <br />

        @if (item.Downvotes.Any(c => c.Id == Model.UserId))
        {
            <form asp-controller="Comment" asp-action="RemoveDownvoteComment" asp-route-id="@item.Id">
                <button type="submit" class="btn btn-warning">
                    <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                        arrow_circle_down
                    </span>
                </button>
            </form>
        }
        else
        {
            <form asp-controller="Comment" asp-action="DownvoteComment" asp-route-id="@item.Id">
                <button type="submit" class="btn btn-warning">
                    <span class="material-symbols-outlined">
                        arrow_circle_down
                    </span>
                </button>
            </form>
        }
    }
    else
    {
        <p>You need to login to upvote or downvote comments</p>
    }


    @if (item.Upvotes != null)
    {
        <p>Upvotes count: @item.Upvotes.Count</p>
    }
    else
    {
        <p>Upvotes count: 0</p>
    }

    @if (item.Downvotes != null)
    {
        <p>Downvotes count: @item.Downvotes.Count</p>
    }
    else
    {
        <p>Downvotes count: 0</p>
    }
    <p>Votes count @item.Votes</p>
}

<hr />