@model DisqussTopics.Models.ViewModels.PostDetailViewModel

@{
    ViewData["Title"] = "Detail";
}

<h1>Detail</h1>

<h4>Post</h4>
<hr />

<!-- Bootstrap Card-->
<div class="card text-bg-dark mb-2">
    <div class="card-header">
        <div class="d-flex justify-content-between">
            <span>
                Topic:
                <a asp-controller="Topic" asp-action="Detail" asp-route-slug="@Model.Post.Topic.Slug">
                    @Html.DisplayFor(model => model.Post.Topic.Slug)
                </a>
                - Posted by
                <a href="#">
                    @Html.DisplayFor(model => model.Post.DTUser.UserName)
                </a>
                Time:
                @Html.DisplayFor(model => model.Post.Created)
            </span>

            @if (User.IsInRole("Admin") || Model.Post.DTUserId == Model.UserId)
            {
                <div class="dropdown">
                    <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                        <span class="material-symbols-outlined">
                            more_vert
                        </span>
                    </span>
                    <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                        <li>
                            <a class="dropdown-item" asp-controller="Post" asp-action="Edit" asp-route-topic="@Model.Post.Topic.Name" asp-route-slug="@Model.Post.Slug" asp-route-id="@Model.Post.Id">Edit</a>
                        </li>
                        <li>
                            <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#post-modal">
                                Delete
                            </span>
                        </li>

                    </ul>
                </div>
            }

        </div>

    </div>

    <div class="card-body">
        <h5 class="card-title">@Html.DisplayFor(model => model.Post.Title)</h5>
    </div>

    <div class="card-body">
        <img src="~/images/test2.png" class="img-fluid">
    </div>

    <div class="card-body">
        <p class="card-text">@Html.DisplayFor(model => model.Post.Content)</p>
    </div>

    <hr />

    <div class="card-body d-flex justify-content-between">
        <div class="d-flex">

            <!-- Upvote button-->
            @if (Model.Post.Upvotes != null)
            {
                @if (Model.Post.Upvotes.Any(u => u.Id == Model.UserId))
                {
                    <form asp-controller="Post" asp-action="RemoveUpvotePost" asp-route-id="@Model.Post.Id">
                        <button type="submit" class="btn btn-success">
                            <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                                arrow_circle_up
                            </span>
                        </button>
                    </form>
                }
                else
                {
                    <form asp-controller="Post" asp-action="UpvotePost" asp-route-id="@Model.Post.Id">
                        <button type="submit" class="btn btn-success">
                            <span class="material-symbols-outlined">
                                arrow_circle_up
                            </span>
                        </button>
                    </form>
                }
            }
            <!-- vote count -->
            <span class="mx-3">@Model.Post.Votes</span>

            @if (Model.Post.Downvotes != null)
            {
                if (Model.Post.Downvotes.Any(d => d.Id == Model.UserId))
                {
                    <form asp-controller="Post" asp-action="RemoveDownvotePost" asp-route-id="@Model.Post.Id">
                        <button type="submit" class="btn btn-danger">
                            <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                                arrow_circle_down
                            </span>
                        </button>
                    </form>
                }
                else
                {
                    <form asp-controller="Post" asp-action="DownvotePost" asp-action="DownvotePost" asp-route-id="@Model.Post.Id">
                        <button type="submit" class="btn btn-danger">
                            <span class="material-symbols-outlined">
                                arrow_circle_down
                            </span>
                        </button>
                    </form>
                }
            }

        </div>
        <!-- comments-->
        <div>
            <span class="material-symbols-outlined">
                chat_bubble
            </span>
            @if (Model.Post.Comments != null)
            {
                @Html.DisplayFor(ModelItem => Model.Post.Comments.Count)
            }
            else
            {
                <span>0</span>
            }
        </div>
        <!-- share-->
        <button type="button" class="btn btn-primary">Share</button>
    </div>

    <div class="card-body">
        <h4>Comment</h4>

        @if (User.Identity.IsAuthenticated)
        {
            <form asp-controller="Post" asp-action="Detail">
                <input type="hidden" asp-for="Post.Id" />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <input type="hidden" asp-for="Comment.PostId" />
                    <textarea asp-for="Comment.Content" rows="4" class="form-control"></textarea>
                    <span asp-validation-for="Comment.Content" class="text-danger"></span>
                </div>
                <div class="text-end">
                    <button type="submit" class="btn btn-primary">Comment</button>
                </div>
            </form>
        }
        else
        {
            <p>You need to login to comment on a post!</p>
        }

    </div>

    @foreach (var item in Model.Comments)
    {
        <div class="card-footer">
            <div>
                <span>
                    <small>@Html.DisplayFor(modelItem => item.DTUser.DTUsername)</small>
                </span>
                <span>
                    <small>@Html.DisplayFor(modelItem => item.Created)</small>
                </span>
            </div>

            <div>@Html.DisplayFor(modelItem => item.Content)</div>

            <div class="d-flex gap-2">

                @if (User.Identity.IsAuthenticated)
                {

                    @if (item.Upvotes.Any(c => c.Id == Model.UserId))
                    {
                        <form asp-controller="Comment" asp-action="RemoveUpvoteComment" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-info">
                                <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                                    arrow_circle_up
                                </span>
                            </button>
                        </form>
                    }
                    else
                    {
                        <form asp-controller="Comment" asp-action="UpvoteComment" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-info">
                                <span class="material-symbols-outlined">
                                    arrow_circle_up
                                </span>
                            </button>
                        </form>
                    }

                    <span>@Html.DisplayFor(modelItem => item.Votes)</span>

                    @if (item.Downvotes.Any(c => c.Id == Model.UserId))
                    {
                        <form asp-controller="Comment" asp-action="RemoveDownvoteComment" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-warning">
                                <span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1;">
                                    arrow_circle_down
                                </span>
                            </button>
                        </form>
                    }
                    else
                    {
                        <form asp-controller="Comment" asp-action="DownvoteComment" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-warning">
                                <span class="material-symbols-outlined">
                                    arrow_circle_down
                                </span>
                            </button>
                        </form>
                    }
                }
                else
                {
                    <button type="submit" class="btn btn-info">
                        <span class="material-symbols-outlined">
                            arrow_circle_up
                        </span>
                    </button>

                    <span>Login to upvote</span>

                    <button type="submit" class="btn btn-warning">
                        <span class="material-symbols-outlined">
                            arrow_circle_down
                        </span>
                    </button>
                }

                @if (User.IsInRole("Admin") || item.DTUserId == Model.UserId)
                {
                    <div class="dropdown">
                        <span role="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="material-symbols-outlined">
                                more_vert
                            </span>
                        </span>
                        <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                            <li>
                                <span role="button" class="dropdown-item comment-edit" data-comment-id="@item.Id" data-bs-toggle="modal" data-bs-target="#comment-edit-modal-@item.Id">
                                    Edit
                                </span>
                            </li>
                            <li>
                                <span role="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#comment-delete-modal-@item.Id" data-url="@Url.Action($"Edit/Comment/{item.Id}")">
                                    Delete
                                </span>
                            </li>
                        </ul>
                    </div>
                }

            </div>
        </div>

        <!-- Comment Delete Modal -->
        <div class="modal fade" id="comment-delete-modal-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content text-white bg-dark">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Comment</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this comment?
                    </div>
                    <div class="modal-footer">
                        <form asp-controller="Comment" asp-action="Delete" asp-route-id="@item.Id">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Confirm</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Comment Edit modal partial-->
        <div class="modal fade comment-edit-modal" id="comment-edit-modal-@item.Id" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" data-comment-edit-modal-id="@item.Id">
            @await Html.PartialAsync("_EditCommentPartial", item)
        </div>



    }

</div>

<!-- Post delete Modal -->
<div class="modal fade" id="post-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content text-white bg-dark">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Post</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete, "@Model.Post.Title"?
            </div>
            <div class="modal-footer">
                <form asp-controller="Post" asp-action="Delete" asp-route-topic="@Model.Post.Topic.Name" asp-route-slug="@Model.Post.Slug" asp-route-id="@Model.Post.Id">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>

